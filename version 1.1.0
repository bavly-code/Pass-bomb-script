-- Starting with core services and initialization
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Systems Initialization
local Systems = {
    ESP = {enabled = false, settings = {}},
    Hitbox = {enabled = false, size = 2},
    Movement = {speed = 16, jump = 50},
    BombDetection = {enabled = true, radius = 10},
    Performance = {fps = 0, ping = 0},
    Settings = {saved = {}}
}

-- Services
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Services and Core Setup
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Services and Core Setup
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Systems Configuration
local Config = {
    GUI = {
        Title = "Pass The Bomb Script",
        MainSize = UDim2.new(0, 600, 0, 450),
        TitleBarHeight = 40,
        CornerRadius = UDim.new(0, 8)
    },
    Colors = {
        Background = Color3.fromRGB(25, 25, 25),
        TitleBar = Color3.fromRGB(30, 30, 30),
        Section = Color3.fromRGB(35, 35, 35),
        Button = Color3.fromRGB(40, 40, 40),
        ButtonHover = Color3.fromRGB(45, 45, 45),
        Enabled = Color3.fromRGB(0, 255, 127),
        Text = Color3.fromRGB(255, 255, 255)
    }
}

-- Core Systems
local Systems = {
    ESP = {
        Enabled = false,
        Players = {},
        Settings = {
            ShowDistance = true,
            ShowHealth = true,
            TeamCheck = true,
            BoxEnabled = true,
            NameEnabled = true,
            SkeletonEnabled = false,
            CustomColors = {
                Enemy = Color3.fromRGB(255, 0, 0),
                Team = Color3.fromRGB(0, 255, 0)
            }
        }
    },
    Hitbox = {
        Personal = {
            Enabled = false,
            Size = 2,
            Visible = false
        },
        Global = {
            Enabled = false,
            Size = 2,
            Visible = false
        }
    },
    Movement = {
        Speed = {
            Enabled = false,
            Value = 16
        },
        Jump = {
            Enabled = false,
            Value = 50
        },
        Fly = {
            Enabled = false,
            Speed = 50
        }
    },
    BombDetection = {
        Enabled = true,
        Radius = 10,
        AutoPass = false,
        PassDelay = 0.5
    },
    Performance = {
        FPS = 0,
        Ping = 0,
        Optimization = true
    }
}

-- GUI Creation and Layout
local function CreateMainGUI()
    -- Clean existing GUIs
    for _, gui in pairs(CoreGui:GetChildren()) do
        if gui:IsA("ScreenGui") and gui.Name:match("PTBScript") then
            gui:Destroy()
        end
    end

    -- Main GUI Setup
    local gui = Instance.new("ScreenGui")
    gui.Name = "PTBScript_" .. math.random(1000000,9999999)
    gui.ResetOnSpawn = false
    gui.Parent = CoreGui

    -- Main Frame with Shadow
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = Config.GUI.MainSize
    mainFrame.Position = UDim2.new(0.5, -300, 0.5, -225)
    mainFrame.BackgroundColor3 = Config.Colors.Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = gui

    -- Add Corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = Config.GUI.CornerRadius
    corner.Parent = mainFrame

-- Title Bar and Controls
local function CreateTitleBar(parent)
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, Config.GUI.TitleBarHeight)
    titleBar.BackgroundColor3 = Config.Colors.TitleBar
    titleBar.BorderSizePixel = 0
    titleBar.Parent = parent

    -- Add corners to title bar
    local corner = Instance.new("UICorner")
    corner.CornerRadius = Config.GUI.CornerRadius
    corner.Parent = titleBar

    -- Title Text
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0.5, 0, 1, 0)
    title.Position = UDim2.new(0.25, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = Config.GUI.Title
    title.TextColor3 = Config.Colors.Text
    title.TextSize = 20
    title.Font = Enum.Font.GothamBold
    title.Parent = titleBar

    -- Control Buttons
    local function CreateButton(text, posX)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0, 40, 0, 40)
        button.Position = UDim2.new(1, posX, 0, 0)
        button.BackgroundTransparency = 1
        button.Text = text
        button.TextColor3 = Config.Colors.Text
        button.TextSize = 25
        button.Font = Enum.Font.GothamBold
        button.Parent = titleBar
        return button
    end

-- Create Tab System and Content
local function CreateTabSystem(parent)
    local tabContainer = Instance.new("Frame")
    tabContainer.Size = UDim2.new(0, 150, 1, -Config.GUI.TitleBarHeight)
    tabContainer.Position = UDim2.new(0, 0, 0, Config.GUI.TitleBarHeight)
    tabContainer.BackgroundColor3 = Config.Colors.Section
    tabContainer.BorderSizePixel = 0
    tabContainer.Parent = parent

    -- Add corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = Config.GUI.CornerRadius
    corner.Parent = tabContainer

    -- Content Container
    local contentContainer = Instance.new("Frame")
    contentContainer.Size = UDim2.new(1, -150, 1, -Config.GUI.TitleBarHeight)
    contentContainer.Position = UDim2.new(0, 150, 0, Config.GUI.TitleBarHeight)
    contentContainer.BackgroundColor3 = Config.Colors.Background
    contentContainer.BorderSizePixel = 0
    contentContainer.Parent = parent

    -- Tab Creation Function
    local function CreateTab(name, icon)
        local tab = Instance.new("TextButton")
        tab.Size = UDim2.new(1, 0, 0, 40)
        tab.Position = UDim2.new(0, 0, 0, #tabContainer:GetChildren() * 40)
        tab.BackgroundColor3 = Config.Colors.Button
        tab.Text = name
        tab.TextColor3 = Config.Colors.Text
        tab.TextSize = 16
        tab.Font = Enum.Font.GothamSemibold
        tab.Parent = tabContainer

        -- Add hover effect
        tab.MouseEnter:Connect(function()
            TweenService:Create(tab, TweenInfo.new(0.3), {
                BackgroundColor3 = Config.Colors.ButtonHover
            }):Play()
        end)

-- Create Feature Systems
local function CreateFeatureSystems(parent)
    -- Hitbox System
    local function CreateHitboxControls(container)
        local hitboxFrame = Instance.new("Frame")
        hitboxFrame.Size = UDim2.new(0.9, 0, 0, 180)
        hitboxFrame.Position = UDim2.new(0.05, 0, 0, 10)
        hitboxFrame.BackgroundColor3 = Config.Colors.Section
        hitboxFrame.BorderSizePixel = 0
        hitboxFrame.Parent = container

        -- Personal Hitbox Controls
        local personalToggle = CreateToggle(hitboxFrame, "Personal Hitbox", function(enabled)
            Systems.Hitbox.Personal.Enabled = enabled
            UpdatePersonalHitbox()
        end)

        local personalSlider = CreateSlider(hitboxFrame, "Size", 0, 20, Systems.Hitbox.Personal.Size, function(value)
            Systems.Hitbox.Personal.Size = value
            UpdatePersonalHitbox()
        end)

        local personalVisibility = CreateToggle(hitboxFrame, "Show Hitbox", function(enabled)
            Systems.Hitbox.Personal.Visible = enabled
            UpdateHitboxVisibility()
        end)

        -- Global Hitbox Controls
        local globalToggle = CreateToggle(hitboxFrame, "Global Hitbox", function(enabled)
            Systems.Hitbox.Global.Enabled = enabled
            UpdateGlobalHitboxes()
        end)

-- Movement and ESP Systems
local function CreateMovementControls(container)
    -- Speed Hack System
    local speedFrame = Instance.new("Frame")
    speedFrame.Size = UDim2.new(0.9, 0, 0, 120)
    speedFrame.Position = UDim2.new(0.05, 0, 0, 10)
    speedFrame.BackgroundColor3 = Config.Colors.Section
    speedFrame.BorderSizePixel = 0
    speedFrame.Parent = container

    local speedToggle = CreateToggle(speedFrame, "Speed Hack", function(enabled)
        Systems.Movement.Speed.Enabled = enabled
        UpdatePlayerSpeed()
    end)

    local speedSlider = CreateSlider(speedFrame, "Speed", 16, 200, Systems.Movement.Speed.Value, function(value)
        Systems.Movement.Speed.Value = value
        if Systems.Movement.Speed.Enabled then
            UpdatePlayerSpeed()
        end
    end)

    -- ESP System Implementation
    local espFrame = Instance.new("Frame")
    espFrame.Size = UDim2.new(0.9, 0, 0, 200)
    espFrame.Position = UDim2.new(0.05, 0, 0, 140)
    espFrame.BackgroundColor3 = Config.Colors.Section
    espFrame.BorderSizePixel = 0
    espFrame.Parent = container

-- Bomb Detection and Performance Systems
local function CreateBombSystem(container)
    local bombFrame = Instance.new("Frame")
    bombFrame.Size = UDim2.new(0.9, 0, 0, 150)
    bombFrame.Position = UDim2.new(0.05, 0, 0, 10)
    bombFrame.BackgroundColor3 = Config.Colors.Section
    bombFrame.BorderSizePixel = 0
    bombFrame.Parent = container

    -- Bomb Detection Controls
    local detectionToggle = CreateToggle(bombFrame, "Bomb Detection", function(enabled)
        Systems.BombDetection.Enabled = enabled
        StartBombDetection()
    end)

    local radiusSlider = CreateSlider(bombFrame, "Detection Radius", 5, 50, Systems.BombDetection.Radius, function(value)
        Systems.BombDetection.Radius = value
    end)

    -- Performance Monitoring
    local performanceFrame = Instance.new("Frame")
    performanceFrame.Size = UDim2.new(0.9, 0, 0, 100)
    performanceFrame.Position = UDim2.new(0.05, 0, 0, 170)
    performanceFrame.BackgroundColor3 = Config.Colors.Section
    performanceFrame.BorderSizePixel = 0
    performanceFrame.Parent = container

-- Notification and Core Systems
local function CreateNotificationSystem()
    local notificationQueue = {}
    
    local function ShowNotification(title, message, duration)
        local notif = Instance.new("Frame")
        notif.Size = UDim2.new(0, 250, 0, 80)
        notif.Position = UDim2.new(1, -260, 1, -90)
        notif.BackgroundColor3 = Config.Colors.Section
        notif.BorderSizePixel = 0
        notif.Parent = gui

        -- Add corners
        local corner = Instance.new("UICorner")
        corner.CornerRadius = Config.GUI.CornerRadius
        corner.Parent = notif

        -- Notification content
        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, -20, 0, 25)
        titleLabel.Position = UDim2.new(0, 10, 0, 5)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Text = title
        titleLabel.TextColor3 = Config.Colors.Text
        titleLabel.TextSize = 16
        titleLabel.Font = Enum.Font.GothamBold
        titleLabel.Parent = notif

-- Core Functionality and Event Handlers
local function InitializeCoreSystems()
    -- Hitbox Management System
    local function UpdateHitboxes()
        if Systems.Hitbox.Personal.Enabled then
            local character = player.Character
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Size = Vector3.new(
                            Systems.Hitbox.Personal.Size,
                            Systems.Hitbox.Personal.Size,
                            Systems.Hitbox.Personal.Size
                        )
                        part.Transparency = Systems.Hitbox.Personal.Visible and 0.5 or 0
                    end
                end
            end
        end
    end

    -- ESP System Implementation
    local function UpdateESP()
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player then
                local character = plr.Character
                if character and Systems.ESP.Enabled then
                    -- ESP Logic here
                end
            end
        end
    end

-- Bomb Detection and Player Tracking
local function InitializeBombSystem()
    -- Bomb Detection Core
    local function CheckForBomb()
        local character = player.Character
        if character and Systems.BombDetection.Enabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name:lower():match("bomb") then
                    local distance = (character.HumanoidRootPart.Position - item.Position).Magnitude
                    if distance <= Systems.BombDetection.Radius then
                        ShowNotification("Bomb Alert!", "Bomb detected nearby!", 2)
                        if Systems.BombDetection.AutoPass then
                            -- Auto pass logic
                        end
                    end
                end
            end
        end
    end

-- Performance Monitoring and Settings
local function InitializePerformanceSystem()
    -- FPS Counter
    local lastFrame = tick()
    local frameCount = 0
    
    RunService.RenderStepped:Connect(function()
        frameCount = frameCount + 1
        local now = tick()
        if now - lastFrame >= 1 then
            Systems.Performance.FPS = frameCount
            frameCount = 0
            lastFrame = now
        end
    end)

    -- Settings Management
    local function SaveSettings()
        local data = {
            hitbox = Systems.Hitbox,
            esp = Systems.ESP,
            movement = Systems.Movement,
            bomb = Systems.BombDetection
        }
        writefile("PTBScript_Settings.json", game:GetService("HttpService"):JSONEncode(data))
    end

-- UI Interactions and Event Handlers
local function InitializeUIHandlers()
    -- Dragging System
    local dragging = false
    local dragStart = nil
    local startPos = nil

    mainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

-- Hotkey and Customization Systems
local function InitializeHotkeySystem()
    -- Quick Toggle Hotkeys
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed then
            if input.KeyCode == Enum.KeyCode.RightAlt then
                ToggleGUI()
            elseif input.KeyCode == Enum.KeyCode.RightControl then
                Systems.ESP.Enabled = not Systems.ESP.Enabled
                UpdateESP()
            end
        end
    end)

    -- Color Customization
    local function UpdateThemeColor(newColor)
        Config.Colors.Enabled = newColor
        RefreshUIColors()
    end

-- Movement and Teleportation Systems
local function InitializeMovementSystems()
    -- Advanced Movement Controls
    local function UpdateFlyMode()
        if Systems.Movement.Fly.Enabled then
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChild("Humanoid")
                local rootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoid and rootPart then
                    -- Fly mode implementation
                    RunService.Heartbeat:Connect(function()
                        if Systems.Movement.Fly.Enabled then
                            rootPart.Velocity = Vector3.new(0, 2, 0)
                            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                                rootPart.CFrame = rootPart.CFrame + Vector3.new(0, Systems.Movement.Fly.Speed/100, 0)
                            end
                            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                                rootPart.CFrame = rootPart.CFrame - Vector3.new(0, Systems.Movement.Fly.Speed/100, 0)
                            end
                        end
                    end)
                end
            end
        end
    end

-- ESP and Player Tracking Systems
local function InitializeESPSystem()
    -- Advanced ESP Features
    local function CreateESPElements(player)
        local esp = {
            box = CreateBox(),
            healthBar = CreateHealthBar(),
            nametag = CreateNameTag(),
            skeleton = CreateSkeleton()
        }
        
        -- Box ESP
        function CreateBox()
            local box = Drawing.new("Square")
            box.Thickness = 1
            box.Filled = false
            box.Transparency = 1
            box.Color = Config.Colors.ESP.Enemy
            return box
        end

        -- Health Bar
        function CreateHealthBar()
            local bar = Drawing.new("Square")
            bar.Thickness = 1
            bar.Filled = true
            return bar
        end

-- Hitbox and Team Detection Systems
local function InitializeHitboxSystems()
    -- Global Hitbox Manipulation
    local function UpdateGlobalHitboxes()
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player then
                local character = plr.Character
                if character and Systems.Hitbox.Global.Enabled then
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.Size = Vector3.new(
                                Systems.Hitbox.Global.Size,
                                Systems.Hitbox.Global.Size,
                                Systems.Hitbox.Global.Size
                            )
                            part.Transparency = Systems.Hitbox.Global.Visible and 0.5 or 1
                            part.CanCollide = false
                        end
                    end
                end
            end
        end
    end

-- Bomb Detection and Auto-Response
local function InitializeBombDetectionSystem()
    -- Advanced Bomb Detection
    local function CreateBombVisualizer()
        local visualizer = Instance.new("Part")
        visualizer.Size = Vector3.new(
            Systems.BombDetection.Radius * 2,
            Systems.BombDetection.Radius * 2,
            Systems.BombDetection.Radius * 2
        )
        visualizer.Transparency = 0.8
        visualizer.BrickColor = BrickColor.new("Really red")
        visualizer.Shape = Enum.PartType.Ball
        visualizer.CanCollide = false
        visualizer.Anchored = true
        
        return visualizer
    end

-- Performance Monitoring and Optimization
local function InitializePerformanceMonitor()
    -- FPS Counter and Display
    local fpsDisplay = CreatePerformanceLabel("FPS: ", UDim2.new(0, 10, 0, 10))
    local pingDisplay = CreatePerformanceLabel("Ping: ", UDim2.new(0, 10, 0, 30))
    
    -- Memory Usage Optimization
    local function OptimizeMemory()
        local connections = {}
        local cleanupTimer = 0
        
        RunService.Heartbeat:Connect(function()
            cleanupTimer = cleanupTimer + 1
            if cleanupTimer >= 100 then
                for i, connection in pairs(connections) do
                    if not connection.Connected then
                        table.remove(connections, i)
                    end
                end
                cleanupTimer = 0
            end
        end)
    end

-- Notification and Troubleshooting Systems
local function InitializeNotificationSystem()
    -- Enhanced Notification Manager
    local notificationQueue = {}
    local activeNotifications = {}
    
    local function CreateNotification(title, message, type)
        local notif = {
            Title = title,
            Message = message,
            Type = type,
            Time = tick(),
            Frame = CreateNotificationFrame()
        }
        
        -- Style based on type (warning, info, error)
        local colors = {
            warning = Color3.fromRGB(255, 165, 0),
            info = Color3.fromRGB(0, 255, 127),
            error = Color3.fromRGB(255, 0, 0)
        }
        
        notif.Frame.BackgroundColor3 = colors[type] or colors.info

-- UI Customization and Settings Management
local function InitializeSettingsSystem()
    -- Dynamic Theme Manager
    local themes = {
        Default = {
            Primary = Color3.fromRGB(25, 25, 25),
            Secondary = Color3.fromRGB(35, 35, 35),
            Accent = Color3.fromRGB(0, 255, 127),
            Text = Color3.fromRGB(255, 255, 255)
        },
        Dark = {
            Primary = Color3.fromRGB(20, 20, 20),
            Secondary = Color3.fromRGB(30, 30, 30),
            Accent = Color3.fromRGB(0, 200, 100),
            Text = Color3.fromRGB(240, 240, 240)
        }
    }

-- Player Interaction and Team Management
local function InitializePlayerSystems()
    -- Advanced Team Detection
    local function UpdateTeamStatus()
        local teamColors = {}
        local function ProcessPlayer(plr)
            if plr ~= player then
                local team = plr.Team
                if team then
                    teamColors[plr.Name] = team.TeamColor.Color
                    -- Update ESP colors based on team
                    if Systems.ESP.Players[plr.Name] then
                        Systems.ESP.Players[plr.Name].TeamColor = team.TeamColor.Color
                    end
                end
            end
        end

-- Movement and Physics Handler
local function InitializePhysicsSystem()
    -- Advanced Movement Controls
    local function UpdateMovementSystem()
        if Systems.Movement.Speed.Enabled then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = Systems.Movement.Speed.Value
            end
        end
        
        if Systems.Movement.Jump.Enabled then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.JumpPower = Systems.Movement.Jump.Value
            end
        end
    end

-- Hitbox Manipulation and Visualization
local function InitializeHitboxVisuals()
    -- Core Hitbox Handler
    local function UpdateHitboxDisplay()
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player then
                local character = plr.Character
                if character then
                    -- Create hitbox visualizer
                    local visualizer = Instance.new("SelectionBox")
                    visualizer.Color3 = Config.Colors.Hitbox
                    visualizer.LineThickness = 0.05
                    visualizer.Adornee = character.HumanoidRootPart
                    visualizer.Parent = character.HumanoidRootPart
                    
                    -- Update size based on settings
                    character.HumanoidRootPart.Size = Vector3.new(
                        Systems.Hitbox.Global.Size,
                        Systems.Hitbox.Global.Size,
                        Systems.Hitbox.Global.Size
                    )
                end
            end
        end
    end

-- Bomb Detection and Auto-Response Handler
local function InitializeBombHandler()
    -- Core Bomb Detection
    local function ScanForBomb()
        local character = player.Character
        if character and Systems.BombDetection.Enabled then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                for _, obj in pairs(workspace:GetDescendants()) do
                    if obj.Name:lower():match("bomb") then
                        local distance = (rootPart.Position - obj.Position).Magnitude
                        if distance <= Systems.BombDetection.Radius then
                            -- Trigger auto-response
                            if Systems.BombDetection.AutoPass then
                                AttemptPassBomb()
                            end
                            -- Show warning
                            CreateNotification("Bomb Alert!", "Bomb detected nearby!", "warning")
                        end
                    end
                end
            end
        end
    end

-- ESP and Player Tracking Implementation
local function InitializeESPHandler()
    -- Core ESP Features
    local function UpdateESPElements()
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player then
                local character = plr.Character
                if character and Systems.ESP.Enabled then
                    -- Create ESP Box
                    local espBox = Drawing.new("Square")
                    espBox.Visible = true
                    espBox.Color = Systems.ESP.Settings.CustomColors.Enemy
                    espBox.Thickness = 1
                    espBox.Transparency = 1
                    espBox.Filled = false
                    
                    -- Create Health Bar
                    local healthBar = Drawing.new("Square")
                    healthBar.Visible = true
                    healthBar.Color = Color3.fromRGB(0, 255, 0)
                    healthBar.Thickness = 1
                    healthBar.Filled = true
                    
                    -- Update ESP positions
                    RunService.RenderStepped:Connect(function()
                        UpdateESPPositions(plr, espBox, healthBar)
                    end)
                end
            end
        end
    end

-- Performance Monitoring and Optimization Handler
local function InitializePerformanceHandler()
    -- FPS Counter Implementation
    local lastTick = tick()
    local frameCount = 0
    
    RunService.RenderStepped:Connect(function()
        frameCount += 1
        local currentTick = tick()
        if currentTick - lastTick >= 1 then
            Systems.Performance.FPS = frameCount
            UpdatePerformanceDisplay("FPS", frameCount)
            frameCount = 0
            lastTick = currentTick
        end
    end)
    
    -- Memory Optimization
    local function OptimizeMemory()
        local gcLimit = 1000 -- Memory threshold in KB
        if gcinfo() > gcLimit then
            collectgarbage("collect")
        end
    end

-- UI and Interaction Handler
local function InitializeUIHandler()
    -- Dynamic Button Creation
    local function CreateInteractiveButton(parent, text, position)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0.9, 0, 0, 35)
        button.Position = position
        button.BackgroundColor3 = Config.Colors.Button
        button.Text = text
        button.TextColor3 = Config.Colors.Text
        button.Font = Enum.Font.GothamSemibold
        button.TextSize = 14
        button.Parent = parent
        
        -- Add hover effects
        button.MouseEnter:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.3), {
                BackgroundColor3 = Config.Colors.ButtonHover
            }):Play()
        end)

-- Slider and Input Systems Handler
local function InitializeControlSystems()
    -- Advanced Slider Creation
    local function CreateAdvancedSlider(parent, title, min, max, default)
        local sliderContainer = Instance.new("Frame")
        sliderContainer.Size = UDim2.new(0.9, 0, 0, 60)
        sliderContainer.BackgroundTransparency = 1
        sliderContainer.Parent = parent

        -- Slider Title
        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, 0, 0, 20)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Text = title
        titleLabel.TextColor3 = Config.Colors.Text
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left
        titleLabel.Font = Enum.Font.GothamSemibold
        titleLabel.Parent = sliderContainer

-- Value Display and Input Handler
local function InitializeValueSystem()
    -- Dynamic Value Input
    local function CreateValueInput(parent, defaultValue)
        local inputBox = Instance.new("TextBox")
        inputBox.Size = UDim2.new(0.2, 0, 0, 25)
        inputBox.Position = UDim2.new(0.75, 0, 0, 0)
        inputBox.BackgroundColor3 = Config.Colors.Input
        inputBox.Text = tostring(defaultValue)
        inputBox.TextColor3 = Config.Colors.Text
        inputBox.Font = Enum.Font.GothamSemibold
        inputBox.TextSize = 14
        inputBox.Parent = parent

-- Connection and Event Handler
local function InitializeEventSystem()
    -- Core Event Management
    local connections = {}
    
    -- Player Connection Handler
    local function HandlePlayerConnections()
        connections.playerAdded = Players.PlayerAdded:Connect(function(plr)
            if Systems.ESP.Enabled then
                CreateESPForPlayer(plr)
            end
            if Systems.Hitbox.Global.Enabled then
                UpdateGlobalHitboxes()
            end
        end)
        
        connections.playerRemoving = Players.PlayerRemoving:Connect(function(plr)
            if Systems.ESP.Players[plr.Name] then
                CleanupESPForPlayer(plr)
            end
        end)
    end

-- Cleanup and Optimization Handler
local function InitializeCleanupSystem()
    -- Memory Management
    local function ManageMemory()
        local lastCleanup = tick()
        
        RunService.Heartbeat:Connect(function()
            if tick() - lastCleanup >= 30 then
                for _, esp in pairs(Systems.ESP.Players) do
                    if not esp.Player.Parent then
                        esp:Destroy()
                    end
                end
                
                collectgarbage("collect")
                lastCleanup = tick()
            end
        end)
    end

-- Save and Load Systems Handler
local function InitializeSaveSystem()
    -- Settings Management
    local function SaveSettings()
        local data = {
            ESP = {
                Enabled = Systems.ESP.Enabled,
                Settings = Systems.ESP.Settings
            },
            Hitbox = {
                Personal = Systems.Hitbox.Personal,
                Global = Systems.Hitbox.Global
            },
            Movement = {
                Speed = Systems.Movement.Speed,
                Jump = Systems.Movement.Jump,
                Fly = Systems.Movement.Fly
            },
            BombDetection = Systems.BombDetection
        }
        
        writefile("PTBScript_Settings.json", HttpService:JSONEncode(data))
    end

-- Main Initialization Handler
local function InitializeMainSystems()
    -- Core Startup Sequence
    local function StartupSequence()
        -- Initialize all major systems
        InitializeUIHandler()
        InitializeESPHandler()
        InitializeHitboxSystems()
        InitializeBombHandler()
        InitializePerformanceHandler()
        InitializeEventSystem()
        InitializeCleanupSystem()
        InitializeSaveSystem()
        
        -- Show startup notification
        CreateNotification("Script Loaded", "Pass The Bomb Script is ready!", "info")
    end

-- Final Systems and Script Execution
local function ExecuteScript()
    -- Credits and Information
    local credits = {
        Creator = "bavly-code",
        GitHub = "https://github.com/bavly-code",
        Version = "1.0.0"
    }
    
    -- Execute all systems
    InitializeMainSystems()
    StartupSequence()
    
    -- Final notification
    CreateNotification("Ready!", "All systems operational", "info")
    
    return true
end

-- Execute the script
ExecuteScript()
