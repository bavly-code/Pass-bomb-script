print("Script starting...")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- Clean up existing GUIs
for _, gui in pairs(CoreGui:GetChildren()) do
    if gui:IsA("ScreenGui") then
        gui:Destroy()
    end
end

-- Create main GUI
local gui = Instance.new("ScreenGui")
gui.Name = math.random(1000000,9999999)
gui.ResetOnSpawn = false
gui.Parent = CoreGui

-- Create main frame with shadow
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 500, 0, 350)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.Parent = gui

local shadow = Instance.new("ImageLabel")
shadow.Size = UDim2.new(1, 40, 1, 40)
shadow.Position = UDim2.new(0, -20, 0, -20)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://5554236805"
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = 0.6
shadow.Parent = mainFrame

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame
-- Title Bar and Navigation
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 1, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Hitbox Controller"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 14
titleLabel.Parent = titleBar

-- Drag functionality
local dragging = false
local dragStart = nil
local startPos = nil

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
-- Content Sections
local sideBar = Instance.new("Frame")
sideBar.Size = UDim2.new(0, 150, 1, -30)
sideBar.Position = UDim2.new(0, 0, 0, 30)
sideBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
sideBar.Parent = mainFrame

local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -160, 1, -40)
contentFrame.Position = UDim2.new(0, 155, 0, 35)
contentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
contentFrame.Parent = mainFrame

-- Create Enhanced Slider Function
local function createSlider(parent, title, min, max, default)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -20, 0, 80)
    container.Position = UDim2.new(0, 10, 0, 50)
    container.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    container.Parent = parent

    local sliderTitle = Instance.new("TextLabel")
    sliderTitle.Size = UDim2.new(1, -20, 0, 20)
    sliderTitle.Position = UDim2.new(0, 10, 0, 5)
    sliderTitle.BackgroundTransparency = 1
    sliderTitle.Text = title
    sliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderTitle.TextXAlignment = Enum.TextXAlignment.Left
    sliderTitle.Font = Enum.Font.GothamBold
    sliderTitle.TextSize = 14
    sliderTitle.Parent = container

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(1, -20, 0, 4)
    sliderBar.Position = UDim2.new(0, 10, 0.5, 0)
    sliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    sliderBar.Parent = container

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new(0.5, 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
    sliderFill.Parent = sliderBar

    local valueBox = Instance.new("TextBox")
    valueBox.Size = UDim2.new(0, 50, 0, 20)
    valueBox.Position = UDim2.new(1, -60, 0.5, -10)
    valueBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    valueBox.Text = tostring(default)
    valueBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    valueBox.Font = Enum.Font.Gotham
    valueBox.TextSize = 14
    valueBox.Parent = container

    return container, valueBox
end
-- Create Toggle Function
local function createToggle(parent, text, yPos)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -20, 0, 40)
    container.Position = UDim2.new(0, 10, 0, yPos)
    container.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    container.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container

    local toggleFrame = Instance.new("Frame")
    local switch = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(0, 44, 0, 24)
    toggleFrame.Position = UDim2.new(0.85, 0, 0.5, -12)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    toggleFrame.Parent = container

    switch.Size = UDim2.new(0, 20, 0, 20)
    switch.Position = UDim2.new(0, 2, 0.5, -10)
    switch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    switch.Parent = toggleFrame

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(1, 0)
    toggleCorner.Parent = toggleFrame

    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(1, 0)
    switchCorner.Parent = switch

    local enabled = false
    toggleFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            enabled = not enabled
            local newPos = enabled and UDim2.new(1, -22, 0.5, -10) or UDim2.new(0, 2, 0.5, -10)
            local newColor = enabled and Color3.fromRGB(0, 255, 127) or Color3.fromRGB(255, 255, 255)
            
            TweenService:Create(switch, TweenInfo.new(0.2), {
                Position = newPos,
                BackgroundColor3 = newColor
            }):Play()
        end
    end)

    return container, function() return enabled end
end
-- Hitbox Modification Function
local function modifyHitbox(character, enabled, size)
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    -- Enhanced hitbox modification with bomb pass support
    humanoidRootPart.Size = enabled and Vector3.new(size, size, size) or Vector3.new(2, 2, 1)
    humanoidRootPart.Transparency = enabled and 0.5 or 1
    humanoidRootPart.CanCollide = false
    
    -- Custom physics properties for bomb mechanics
    humanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(
        0.7, -- Density
        0.3, -- Friction
        0.5, -- Elasticity
        1,   -- FrictionWeight
        1    -- ElasticityWeight
    )
    
    -- Visual feedback
    local visual = humanoidRootPart:FindFirstChild("HitboxVisual")
    if visual then visual:Destroy() end
    
    if enabled then
        visual = Instance.new("SelectionBox")
        visual.Name = "HitboxVisual"
        visual.Color3 = Color3.fromRGB(0, 255, 127)
        visual.LineThickness = 0.05
        visual.Transparency = 0.3
        visual.Adornee = humanoidRootPart
        visual.Parent = humanoidRootPart
    end
end

-- Create Sections
local personalSection = Instance.new("Frame")
personalSection.Size = UDim2.new(1, 0, 1, 0)
personalSection.BackgroundTransparency = 1
personalSection.Visible = true
personalSection.Parent = contentFrame

local expanderSection = Instance.new("Frame")
expanderSection.Size = UDim2.new(1, 0, 1, 0)
expanderSection.BackgroundTransparency = 1
expanderSection.Visible = false
expanderSection.Parent = contentFrame
-- Create Section Buttons
local function createSectionButton(text, yPos)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.9, 0, 0, 40)
    button.Position = UDim2.new(0.05, 0, 0, yPos)
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 14
    button.Parent = sideBar
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button
    
    return button
end

local personalButton = createSectionButton("Personal Hitbox", 10)
local expanderButton = createSectionButton("Hitbox Expander", 60)

-- Create Controls for Personal Section
local personalToggle, getPersonalEnabled = createToggle(personalSection, "Enable Personal Hitbox", 10)
local personalSlider, personalValue = createSlider(personalSection, "Personal Hitbox Size", 2, 20, 2)

-- Create Controls for Expander Section
local expanderToggle, getExpanderEnabled = createToggle(expanderSection, "Enable Global Hitbox", 10)
local expanderSlider, expanderValue = createSlider(expanderSection, "Global Hitbox Size", 2, 20, 2)

-- Section Switching
personalButton.MouseButton1Click:Connect(function()
    personalSection.Visible = true
    expanderSection.Visible = false
    personalButton.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
    expanderButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
end)

expanderButton.MouseButton1Click:Connect(function()
    personalSection.Visible = false
    expanderSection.Visible = true
    expanderButton.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
    personalButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
end)

-- Update Loop
RunService.Heartbeat:Connect(function()
    if getPersonalEnabled() and player.Character then
        modifyHitbox(player.Character, true, tonumber(personalValue.Text) or 2)
    end
    
    if getExpanderEnabled() then
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player and plr.Character then
                modifyHitbox(plr.Character, true, tonumber(expanderValue.Text) or 2)
            end
        end
    end
end)

-- Cleanup
gui.Destroying:Connect(function()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr.Character then
            modifyHitbox(plr.Character, false, 2)
        end
    end
end)
