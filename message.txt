local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- GUI Creation
local gui = Instance.new("ScreenGui")
gui.Parent = CoreGui

-- Main Frame (larger to accommodate sections)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 500, 0, 350)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame
mainFrame.Parent = gui

-- Title Bar with curved corners for all elements
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar
titleBar.Parent = mainFrame

-- Sidebar
local sideBar = Instance.new("Frame")
sideBar.Size = UDim2.new(0, 150, 1, -30)
sideBar.Position = UDim2.new(0, 0, 0, 30)
sideBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
sideBar.Parent = mainFrame

-- Content Area
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -160, 1, -40)
contentFrame.Position = UDim2.new(0, 155, 0, 35)
contentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
contentFrame.Parent = mainFrame

-- Create Section Button
local function createSectionButton(text, yPos)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.9, 0, 0, 40)
    button.Position = UDim2.new(0.05, 0, 0, yPos)
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 14
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button
    button.Parent = sideBar
    return button
end

-- Create Toggle Switch
local function createToggleSwitch(parent, text, yPos)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 40)
    container.Position = UDim2.new(0, 0, 0, yPos)
    container.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 6)
    containerCorner.Parent = container
    container.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 15, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container

    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(0, 44, 0, 24)
    toggleFrame.Position = UDim2.new(0.85, 0, 0.5, -12)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(1, 0)
    toggleCorner.Parent = toggleFrame
    toggleFrame.Parent = container

    local switch = Instance.new("Frame")
    switch.Size = UDim2.new(0, 20, 0, 20)
    switch.Position = UDim2.new(0, 2, 0.5, -10)
    switch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(1, 0)
    switchCorner.Parent = switch
    switch.Parent = toggleFrame

    return container, toggleFrame, switch
end

-- Create Slider with Input
local function createSlider(parent, text, yPos)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 80)
    container.Position = UDim2.new(0, 0, 0, yPos)
    container.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 6)
    containerCorner.Parent = container
    container.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 0, 30)
    label.Position = UDim2.new(0, 15, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(0.7, 0, 0, 6)
    sliderBar.Position = UDim2.new(0.15, 0, 0.6, 0)
    sliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(1, 0)
    sliderCorner.Parent = sliderBar
    sliderBar.Parent = container

    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 16, 0, 16)
    sliderButton.Position = UDim2.new(0, 0, 0.5, -8)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(1, 0)
    buttonCorner.Parent = sliderButton
    sliderButton.Parent = sliderBar

    local valueBox = Instance.new("TextBox")
    valueBox.Size = UDim2.new(0.15, 0, 0, 25)
    valueBox.Position = UDim2.new(0.8, 0, 0.45, 0)
    valueBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    valueBox.Text = "1"
    valueBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    valueBox.Font = Enum.Font.Gotham
    valueBox.TextSize = 14
    local valueCorner = Instance.new("UICorner")
    valueCorner.CornerRadius = UDim.new(0, 4)
    valueCorner.Parent = valueBox
    valueBox.Parent = container

    return container, sliderButton, valueBox
end

-- Create Player Selection
local function createPlayerSelection(parent, yPos)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 60)
    container.Position = UDim2.new(0, 0, 0, yPos)
    container.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 6)
    containerCorner.Parent = container
    container.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 0, 30)
    label.Position = UDim2.new(0, 15, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = "Player Selection"
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container

    local input = Instance.new("TextBox")
    input.Size = UDim2.new(0.9, 0, 0, 25)
    input.Position = UDim2.new(0.05, 0, 0.5, 0)
    input.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    input.Text = "Enter player name"
    input.TextColor3 = Color3.fromRGB(255, 255, 255)
    input.Font = Enum.Font.Gotham
    input.TextSize = 14
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 4)
    inputCorner.Parent = input
    input.Parent = container

    return container, input
end

-- Create Content Sections
local personalHitboxSection = Instance.new("Frame")
personalHitboxSection.Size = UDim2.new(1, 0, 1, 0)
personalHitboxSection.BackgroundTransparency = 1
personalHitboxSection.Visible = true
personalHitboxSection.Parent = contentFrame

local hitboxExpanderSection = Instance.new("Frame")
hitboxExpanderSection.Size = UDim2.new(1, 0, 1, 0)
hitboxExpanderSection.BackgroundTransparency = 1
hitboxExpanderSection.Visible = false
hitboxExpanderSection.Parent = contentFrame

-- Create Section Buttons
local personalButton = createSectionButton("Personal Hitbox", 10)
local expanderButton = createSectionButton("Hitbox Expander", 60)

-- Add Content to Sections
local removeHitbox, removeFrame, removeSwitch = createToggleSwitch(personalHitboxSection, "Remove Hitbox", 10)
local showHitbox, showFrame, showSwitch = createToggleSwitch(personalHitboxSection, "Show Hitbox", 60)

local playerSelect, playerInput = createPlayerSelection(hitboxExpanderSection, 10)
local hitboxSlider, sliderButton, sliderValue = createSlider(hitboxExpanderSection, "Hitbox Size", 80)
local showPlayerHitbox, playerShowFrame, playerShowSwitch = createToggleSwitch(hitboxExpanderSection, "Show Player Hitbox", 170)

-- Section Switching
personalButton.MouseButton1Click:Connect(function()
    personalHitboxSection.Visible = true
    hitboxExpanderSection.Visible = false
    personalButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    expanderButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
end)

expanderButton.MouseButton1Click:Connect(function()
    personalHitboxSection.Visible = false
    hitboxExpanderSection.Visible = true
    expanderButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    personalButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
end)

-- Add title and control buttons
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -100, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Hitbox Controller"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Control Buttons with curved corners
local function createControlButton(text, posX)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 30, 0, 30)
    button.Position = UDim2.new(1, posX, 0, 0)
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 16
    button.Font = Enum.Font.GothamBold
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button
    button.Parent = titleBar
    return button
end

local minButton = createControlButton("-", -60)
local closeButton = createControlButton("×", -30)

-- Add functionality (minimize, close, dragging)
minButton.MouseButton1Click:Connect(function()
    local isClosed = contentFrame.Visible
    contentFrame.Visible = not isClosed
    sideBar.Visible = not isClosed
    mainFrame.Size = isClosed and UDim2.new(0, 500, 0, 30) or UDim2.new(0, 500, 0, 350)
end)

closeButton.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Make GUI draggable
local dragging, dragInput, dragStart, startPos
titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
    end
end)

titleBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Toggle functionality for Personal Hitbox
removeFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local enabled = removeSwitch.Position.X.Offset > 2
        local newPos = enabled and UDim2.new(0, 2, 0.5, -10) or UDim2.new(1, -22, 0.5, -10)
        local newColor = enabled and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(0, 255, 127)
        
        TweenService:Create(removeSwitch, TweenInfo.new(0.2), {
            Position = newPos,
            BackgroundColor3 = newColor
        }):Play()
        
        -- Toggle personal hitbox
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CanCollide = enabled
        end
    end
end)

-- Toggle functionality for Show Hitbox
showFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local enabled = showSwitch.Position.X.Offset > 2
        local newPos = enabled and UDim2.new(0, 2, 0.5, -10) or UDim2.new(1, -22, 0.5, -10)
        local newColor = enabled and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(0, 255, 127)
        
        TweenService:Create(showSwitch, TweenInfo.new(0.2), {
            Position = newPos,
            BackgroundColor3 = newColor
        }):Play()
        
        -- Toggle hitbox visibility
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local root = player.Character.HumanoidRootPart
            if not enabled then
                local visual = Instance.new("SelectionBox")
                visual.Name = "HitboxVisual"
                visual.Color3 = Color3.fromRGB(255, 0, 0)
                visual.LineThickness = 0.05
                visual.Adornee = root
                visual.Parent = root
            else
                local visual = root:FindFirstChild("HitboxVisual")
                if visual then visual:Destroy() end
            end
        end
    end
end)

-- Hitbox Expander functionality
local function updatePlayerHitbox(player, size)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local root = player.Character.HumanoidRootPart
        root.Size = Vector3.new(size, size, size)
        
        -- Update visual if enabled
        local visual = root:FindFirstChild("HitboxVisual")
        if visual then
            visual.Adornee = root
        end
    end
end

-- Slider functionality
local isDragging = false
sliderButton.MouseButton1Down:Connect(function()
    isDragging = true
end)

game:GetService("UserInputService").InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDragging = false
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and isDragging then
        local sliderPosition = math.clamp(
            (input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X,
            0, 1
        )
        local hitboxSize = 2 + (sliderPosition * 18) -- Size range: 2-20
        sliderButton.Position = UDim2.new(sliderPosition, -8, 0.5, -8)
        sliderValue.Text = string.format("%.1f", hitboxSize)
        
        -- Update target player's hitbox
        local targetPlayer = Players:FindFirstChild(playerInput.Text)
        if targetPlayer then
            updatePlayerHitbox(targetPlayer, hitboxSize)
        end
    end
end)

-- Player hitbox visibility toggle
playerShowFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local enabled = playerShowSwitch.Position.X.Offset > 2
        local newPos = enabled and UDim2.new(0, 2, 0.5, -10) or UDim2.new(1, -22, 0.5, -10)
        local newColor = enabled and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(0, 255, 127)
        
        TweenService:Create(playerShowSwitch, TweenInfo.new(0.2), {
            Position = newPos,
            BackgroundColor3 = newColor
        }):Play()
        
        -- Toggle hitbox visibility for target player
        local targetPlayer = Players:FindFirstChild(playerInput.Text)
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local root = targetPlayer.Character.HumanoidRootPart
            if not enabled then
                local visual = Instance.new("SelectionBox")
                visual.Name = "HitboxVisual"
                visual.Color3 = Color3.fromRGB(255, 0, 0)
                visual.LineThickness = 0.05
                visual.Adornee = root
                visual.Parent = root
            else
                local visual = root:FindFirstChild("HitboxVisual")
                if visual then visual:Destroy() end
            end
        end
    end
end)

